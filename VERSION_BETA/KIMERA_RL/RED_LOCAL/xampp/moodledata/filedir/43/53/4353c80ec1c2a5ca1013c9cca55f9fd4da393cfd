<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with TexToys by Half-Baked Software, registered to Unregistered."></meta><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>Edición de texto</title>

<!-- Made with executable version 2.1 Release 3 Build 0 -->

<style type="text/css">

body{

	background-color: #ffffff;
	font-family: Geneva,Arial,sans-serif;
	color: #000000;
	margin-right: 5%;
	margin-left: 5%;
	font-size: 10pt;
}

div,span,td{
	font-size: 10pt;
	color: #000000;
}

div.Titles{
	padding-top: 10px;
	text-align: center;
	margin-bottom: 4px;
	color: #000000;
}

.ExerciseTitle{
	font-size: large;
	color: #000000;
}

.Instructions{
	color: #000000;
}

div.TimerDiv{
	text-align: center;
	margin-left: auto;
	margin-right: auto;
	margin-top: 10px;
	margin-bottom: 10px;
}

span#ClockFace{
	padding: 5px;
	background-color: #ffffff;
	color: #000000;
	border-width: 1px;
	border-style: solid;
}

div.StdDiv{
	background-color: #dddddd;
	text-align: center;
	font-size: smaller;
	color: #000000;
	padding: 8px;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000000;
	margin: 1px;
}

span.Choice{
	color: #000000;
}

div#Story{
	text-align: left;
	color: #000000;
	font-family: Geneva,Arial,sans-serif;
	background-color: #dddddd;
	margin-left: 5%;
	margin-right: 5%;
	margin-bottom: 20px;
	padding: 10px;
	border-width: 1px;
	border-style: solid;
	border-color: #000000;
}

table.ExerciseTable{
	margin-left: auto;
	margin-right: auto;
}

.FunctionButton {
	background-color: #dddddd;
	color: #000000;
	text-align: center;
	border-style: solid;
	border-color: #dddddd;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

div.NavButtonBar{
	background-color: #999999;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: small;
}

div.NavButtonBar button {
	border-style: solid;
	border-color: #999999;
	background-color: #999999;
	border-width: 2px;
	padding: 2px 2px 2px 2px;
	color: #000000;
	cursor: pointer;	
}

a{
	color: #0000cc;
}

a:visited{
	color: #0000ff;
}

a:hover{
	color: #0000cc;
}

</style>

<script type="text/javascript">

//<![CDATA[

<!--

// BrowserCheck Object

function BrowserCheck() {
	var b = navigator.appName;
	this.mac = (navigator.appVersion.indexOf('Mac') != -1);
	if (b=="Netscape") this.b = 'ns';
	else if (b=="Microsoft Internet Explorer") this.b = 'ie';
	else this.b = b;
	this.ns = (this.b == 'ns');
	this.ie = (this.b == 'ie');
	this.version = navigator.appVersion;
	if (this.b == 'ie'){
		var x = this.version.indexOf('MSIE ') + 5;
		var vnum = '';

		while ((this.version.charAt(x) > -1)&&(this.version.charAt(x) < 10)){
			vnum += this.version.charAt(x);
			x++;
		}
		this.v = parseInt(vnum);
	}
	else{
		this.v = parseInt(this.version);
	}
	if (this.ns&&(this.v == 5)){
		this.v = 6;
	}
	this.min = (this.v > 5);
}

var is = new BrowserCheck();

if (is.min == false){
	alert('Your browser can\'t handle this page. You need NS6 or IE5 on Windows, or NS6 on Mac.');
}

document.onkeypress = KeyPress;

function KeyPress(e) {
	var InKey = 0;
	if (is.ns) {InKey=e.which}
	if (is.ie) {InKey=event.keyCode}

	if ((String.fromCharCode(InKey)).toUpperCase() == 'A'){
		CheckAnswer(1);
		return false;
	}
	if ((String.fromCharCode(InKey)).toUpperCase() == 'B'){
		CheckAnswer(2);
		return false;
	}
	if ((String.fromCharCode(InKey)).toUpperCase() == 'C'){
		CheckAnswer(3);
		return false;
	}
	if ((String.fromCharCode(InKey)).toUpperCase() == 'R'){
		StartUp();
		return false;
	}
	return true;
}

var NavLightColor = '#cccccc';
var NavShadeColor = '#4c4c4c';
var NavBarColor = '#999999';
var FuncLightColor = '#eeeeee';
var FuncShadeColor = '#6e6e6e';
var ExBGColor = '#dddddd';

function NavBtnOver(Btn){
	Btn.style.padding = '1px 3px 3px 1px';
	Btn.style.borderLeftColor = NavLightColor;
	Btn.style.borderTopColor = NavLightColor;
	Btn.style.borderRightColor = NavShadeColor;
	Btn.style.borderBottomColor = NavShadeColor;
}

function NavBtnOut(Btn){
	Btn.style.borderColor = NavBarColor;
	Btn.style.padding = '2px 2px 2px 2px';
}

function NavBtnDown(Btn){
	Btn.style.borderLeftColor = NavShadeColor;
	Btn.style.borderTopColor = NavShadeColor;
	Btn.style.borderRightColor = NavLightColor;
	Btn.style.borderBottomColor = NavLightColor;
	Btn.style.padding = '3px 1px 1px 3px';
}

function FuncBtnOver(Btn){
	Btn.style.padding = '2px 7px 4px 5px';
	Btn.style.borderLeftColor = FuncLightColor;
	Btn.style.borderTopColor = FuncLightColor;
	Btn.style.borderRightColor = FuncShadeColor;
	Btn.style.borderBottomColor = FuncShadeColor;
}

function FuncBtnOut(Btn){
	Btn.style.borderColor = '#dddddd';
	Btn.style.padding = '3px 6px 3px 6px';
}

function FuncBtnDown(Btn){
	Btn.style.borderLeftColor = FuncShadeColor;
	Btn.style.borderTopColor = FuncShadeColor;
	Btn.style.borderRightColor = FuncLightColor;
	Btn.style.borderBottomColor = FuncLightColor;
	Btn.style.padding = '4px 5px 2px 7px';
}



var RightChar = ':-)';
var WrongChar = 'X';
var StorySoFar = '';

var CurrentAnswer = '';
var GuessesSoFar = 0;
var CurrentNumber = 0;
var CurrentCorrect = 0;
var Points = 0;
var TotalSegments = 0;

var ThisQScore = 0;
var FinalScore = 0;

var AllDone = true;

var StartTime = (new Date()).getTime();

function StartUp(){

//[Startup code for getting student id]


	TotalSegments = Segments.length - 1;

	CurrentNumber = 1;
	ShowQuestion();
	Points = 0;
	ThisQScore = 2;
	document.getElementById('Story').innerHTML = '';
	document.getElementById('ScoreBox').innerHTML = '';
	StorySoFar = '';

	AllDone = false;


}

function ShowQuestion(){

//Deal with the new paragraph thing

	if (Segments[CurrentNumber] == '[NewPara]'){
		StorySoFar += '<br /><br />';
		Points += 2;
		CurrentNumber++;
	}

//Deal with the last two segment situation
	if (CurrentNumber == TotalSegments - 1){

		var Temp = 1 + Math.floor(2 * Math.random());
		document.getElementById('ChoiceA').innerHTML = RemoveSlash(Segments[TotalSegments]);
		document.getElementById('ChoiceB').innerHTML = RemoveSlash(Segments[TotalSegments]);
		document.getElementById('ChoiceC').innerHTML = '';
		if (Temp == 1){document.getElementById('ChoiceA').innerHTML = RemoveSlash(Segments[CurrentNumber]);}
		if (Temp == 2){document.getElementById('ChoiceB').innerHTML = RemoveSlash(Segments[CurrentNumber]);}
		if (Temp == 3){document.getElementById('ChoiceC').innerHTML = RemoveSlash(Segments[CurrentNumber]);}
		CurrentCorrect = Temp;
		CurrentAnswer = Segments[CurrentNumber];
		ThisQScore = 1;
		return;
	}
	
	var FirstDistractor = 0;
	var SecondDistractor = 0;
	var Range = TotalSegments - CurrentNumber;

	FirstDistractor = (CurrentNumber + 1) + Math.floor(Range  *  Math.random());
	while (Segments[FirstDistractor] == '[NewPara]'){
		FirstDistractor = (CurrentNumber + 1) + Math.floor(Range  *  Math.random());
	}

	SecondDistractor = FirstDistractor;
	while ((SecondDistractor == FirstDistractor)||(Segments[SecondDistractor] == '[NewPara]')){
		SecondDistractor = (CurrentNumber + 1) + Math.floor(Range  *  Math.random());
	}

	var ThreeSegments = new Array(3);
	ThreeSegments[1] = Segments[CurrentNumber];
	ThreeSegments[2] = Segments[FirstDistractor];
	ThreeSegments[3] = Segments[SecondDistractor];


	CurrentAnswer = Segments[CurrentNumber];

	var MixedSegments = new Array(3);

	var j = 3;
	var i = 1;
	Temp = 0;
	for (i = 1; i < 4; i++)  {

		Temp = 1 + Math.floor(j  *  Math.random());
		MixedSegments[i] = ThreeSegments[Temp];

		for (var k=Temp; k < j; k++) {
			ThreeSegments[k] = ThreeSegments[k+1];
		}
		j = j - 1;
	}

	for (i=1; i<4; i++){
		if (MixedSegments[i] == CurrentAnswer){
			CurrentCorrect = i;
		}
		MixedSegments[i] = RemoveSlash(MixedSegments[i]);
	}

	document.getElementById('ChoiceA').innerHTML = MixedSegments[1];
	document.getElementById('ChoiceB').innerHTML = MixedSegments[2];
	document.getElementById('ChoiceC').innerHTML = MixedSegments[3];
	document.getElementById('ChoiceACorrect').innerHTML = '&nbsp;&nbsp;&nbsp;';
	document.getElementById('ChoiceBCorrect').innerHTML = '&nbsp;&nbsp;&nbsp;';
	document.getElementById('ChoiceCCorrect').innerHTML = '&nbsp;&nbsp;&nbsp;';

	ThisQScore = 2;

}

function SlashToReturn(InString){
	if (InString.charAt(InString.length-2) == '/'){
		InString= InString.substring(0, InString.length-2) + '<br />';
	}
	return InString;
}


function RemoveSlash(InString){
	if (InString.charAt(InString.length-2) == '/'){
		InString= InString.substring(0, InString.length-2);
	}
	return InString;
}

function CheckAnswer(Chosen){

	if ((CurrentNumber == TotalSegments)||(AllDone == true)){
		return;
	}

	if (CurrentCorrect == Chosen){
		StorySoFar += SlashToReturn(CurrentAnswer);

		setTimeout("document.getElementById('Story').innerHTML = StorySoFar", 50);

		if (CurrentNumber == TotalSegments - 1){
			StorySoFar += SlashToReturn(Segments[TotalSegments]);
		}
	
		CurrentNumber++;
		Points += ThisQScore;
		
		if (CurrentNumber < TotalSegments){
			var CurrentScore = Math.floor(100*Points/(2*(CurrentNumber-1)));
			document.getElementById('ScoreBox').innerHTML = CurrentScore + '%';
			ShowQuestion();
		}
		else{
			document.getElementById('ChoiceA').innerHTML = RightChar;
			document.getElementById('ChoiceB').innerHTML = RightChar;
			document.getElementById('ChoiceC').innerHTML = RightChar;
			document.getElementById('ChoiceACorrect').innerHTML = RightChar;
			document.getElementById('ChoiceBCorrect').innerHTML = RightChar;
			document.getElementById('ChoiceCCorrect').innerHTML = RightChar;
			FinalScore = Math.floor(100*Points/((2*TotalSegments) - 3));
			document.getElementById('ScoreBox').innerHTML = FinalScore + '%';

			Finish();

		}	

	}
	else{
		if (Chosen == 1){
			document.getElementById('ChoiceACorrect').innerHTML = WrongChar;
		}
		if (Chosen == 2){
			document.getElementById('ChoiceBCorrect').innerHTML = WrongChar;
		}
		if (Chosen == 3){
			document.getElementById('ChoiceCCorrect').innerHTML = WrongChar;
		}
		document.getElementById('ScoreBox').innerHTML = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
		if (ThisQScore > 0){
			ThisQScore--;
		}
	}
}

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = StartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = FinalScore;
		Frm.submit();
	}
}




var Segments = new Array();
Segments[1] = 'La mayor\u00EDa de las \u00E1reas de introducci\u00F3n ';
Segments[2] = 'de texto (recursos, mensajes de los foros, ';
Segments[3] = 'entradas de los diarios, etc.) pueden ser ';
Segments[4] = 'editadas usando el editor integrado HTML ';



//-->

//]]>

</script>

</head>

<body onload="StartUp()">

<!-- BeginTopNavButtons -->



<!-- EndTopNavButtons -->

<div class="Titles">
	<span class="ExerciseTitle">Edición de texto</span><br />
	<span class="Instructions"></span><br />
</div>

<!-- [Student login info] -->



<div class="StdDiv">

<table border="0" cellpadding="8" class="ExerciseTable">
<tr>
<td align="center" valign="middle"><button class="FunctionButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="CheckAnswer(1)">&nbsp;&nbsp;A&nbsp;&nbsp;</button></td>
<td align="left" valign="middle"><span id="ChoiceA" class="Choice"></span></td>
<td align="left" valign="middle"><span id="ChoiceACorrect" class="Choice">&nbsp;&nbsp;&nbsp;</span></td>
</tr>
<tr>
<td align="center" valign="middle"><button class="FunctionButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="CheckAnswer(2)">&nbsp;&nbsp;B&nbsp;&nbsp;</button></td>
<td align="left" valign="middle"><span id="ChoiceB" class="Choice"></span></td>
<td align="left" valign="middle"><span id="ChoiceBCorrect" class="Choice">&nbsp;&nbsp;&nbsp;</span></td>
</tr>
<tr>
<td align="center" valign="middle"><button class="FunctionButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="CheckAnswer(3)">&nbsp;&nbsp;C&nbsp;&nbsp;</button></td>
<td align="left" valign="middle"><span id="ChoiceC" class="Choice"></span></td>
<td align="left" valign="middle"><span id="ChoiceCCorrect" class="Choice">&nbsp;&nbsp;&nbsp;</span></td>
</tr>
<tr>
<td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td><td></td>
</tr>
</table>

<div id="Story">

</div>

<span class="Label">Su puntuación es:</span> <span id="ScoreBox">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>

<br /><br />



</div>

<!-- BeginBottomNavButtons -->



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>
</html>
